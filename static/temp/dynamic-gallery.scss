@use 'sass:map';
@use 'sass:math';
@use '../scss/common/variables.scss' as variables;

@media screen and (min-width: map.get(variables.$screen-sizes, "large-min")) {
    $caption-bg-color: var(--color-primary-light);
    $caption-txt-color: var(--color-white);

    // Units
    $unit-of-err: 0.00001;
    $units-total: 10;
    $unit-of-start: math.div(100, $units-total);
    $unit-of-end: 100 - $unit-of-start;

    // Time per unit
    $clip-out-item-animation-show-duration: 1.5s;
    $clip-out-item-animation-transitition-duration: 1.5s;

    // Total time per unit
    $clip-out-item-animation-total-duration:
        $clip-out-item-animation-show-duration +
        $clip-out-item-animation-transitition-duration;

    // Total time
    $clip-out-total-animation-duration:
        ($units-total * $clip-out-item-animation-total-duration);

    @keyframes clip-out-animation {
        // The image is being shown initially above the others
        0% {
            clip-path: polygon(100% 0, 100% 0, 100% 0, 0 100%, 0 100%, 0 100%);
            filter: grayscale(100%) contrast(0%);
            z-index: 10;
        }

        #{math.div($unit-of-start, 2)}% {
            clip-path: polygon(0 0, 100% 0, 100% 100%, 100% 100%, 0 100%, 0 0);
            filter: grayscale(0%) contrast(100%);
            z-index: 10;
        }

        #{$unit-of-start}% {
            z-index: 10;
        }

        #{$unit-of-start * 1.5}% {
            z-index: 0;
        }

        #{$unit-of-start * 1.5 + $unit-of-err}% {
            z-index: -10;
        }

        #{$unit-of-end}% {
            z-index: -10;
        }

        #{$unit-of-end + $unit-of-err}% {
            z-index: 0;
        }

        100% {
            z-index: 0;
        }
    }

    div.dynamic-gallery {
        /* Use flexbox to center the container */
        justify-content: center;
        flex-direction: row;
        display: flex;
        width: 100%;

        .dynamic-gallery-container {
            border-width: 30px;
            border-style: solid;
            border-image-slice: 100;
            border-image-source: url('/static/resources/images/content/gallery/border-image-frame.png');

            overflow: hidden;
            display: block;

            height: 400px;
            width: 400px;

            &:hover .dynamic-gallery-item > figure {
                animation-play-state: paused;
            }

            .dynamic-gallery-item {
                position: relative;
                padding: 0px;
                margin: 0px;

                > figure {
                    animation-name: clip-out-animation;
                    animation-timing-function: linear;
                    animation-iteration-count: infinite;
                    animation-fill-mode: forwards;
                    animation-duration: $clip-out-total-animation-duration;
                    transition: clip-path $clip-out-item-animation-transitition-duration;
                    transition: filter $clip-out-item-animation-transitition-duration;

                    position: absolute;
                    padding: 0px;
                    margin: 0px;

                    figcaption {
                        /*
                            Center the text and stretch it at the bottom
                            of the parent element
                        */
                        padding-bottom: 0.25em;
                        text-align: center;
                        position: absolute;
                        width: 100%;
                        bottom: 0px;

                        /* Set the color for the caption */
                        background-color: rgba(#00CAED, 0.75);

                        // TODO: DOES NOT WORK:
                        // background-color: rgba($caption-bg-color, 0.75);

                        color: $caption-txt-color;
                    }
                }

                @for $i from 0 to $units-total {
                    &:nth-of-type(#{$units-total - $i}) > figure {
                        animation-delay:
                            $i * $clip-out-item-animation-total-duration;
                    }
                }
            }
        }
    }
}

@media screen
    and (min-width: map.get(variables.$screen-sizes, "medium-min"))
    and (max-width: map.get(variables.$screen-sizes, "medium-max")) {
    .dynamic-gallery {
        display: none;
    }
}

@media screen
    and (max-width: map.get(variables.$screen-sizes, "small-max")) {
    .dynamic-gallery {
        display: none;
    }
}